#!/bin/bash
# this test script is applicable to 
# 

#define accounts variables
user1=ar$(echo $RANDOM)
user2=ar$(echo $RANDOM)

autoreplymode=reply

#define clean_account function
function clean_accounts ()
{
		expect.exp $expect_timeout $MX1_HOST_IP1 $expect_user $expect_pass $expect_subuser \
		"imconfcontrol -install -key \"/*/mta/autoReplySuppressList=autoanswer\necho\nlistserv\nmailerdaemon\nmailer-daemon\nmirror\nnetserv\nserver\nuucp\nmailer\nlistproc\nmajordomo\nlist.manager\""
		echo "##########  doing some clear job ..."
		#delete accounts
		mos_delete_user.sh ${MXOS1_HOST_IP}  $MXOS1__PORT $user1@openwave.com
		mos_delete_user.sh ${MXOS1_HOST_IP}  $MXOS1__PORT $user2@openwave.com
		
		#restore key
}

trap clean_accounts SIGHUP SIGINT SIGTERM


#1 clear mta.log and other tmp files
echo "########## 1 Clear mta.log using expect tool ..."

expect.exp $expect_timeout $MX1_HOST_IP1 $expect_user $expect_pass $expect_subuser \
"> ~/log/mta.log\r"

#clear other tmp log files
rm expect*.log 
rm imapfetch*.log
rm send*.log
	
#2 create accounts user1@openwave.com and user2@openwave.com
echo "########## 2 Accounts provision ..."
mos_create_user.sh  ${MXOS1_HOST_IP}  $MXOS1__PORT $user1@openwave.com $passwd
mos_create_user.sh  ${MXOS1_HOST_IP}  $MXOS1__PORT $user2@openwave.com $passwd

# add user to autoReplySuppressList config key:

expect.exp $expect_timeout $MX1_HOST_IP1 $expect_user $expect_pass $expect_subuser \
"imconfcontrol -install -key \"/*/mta/autoReplySuppressList=autoanswer\necho\nlistserv\nmailerdaemon\nmailer-daemon\nmirror\nnetserv\nserver\nuucp\nmailer\nlistproc\nmajordomo\nlist.manager\n$user1\" " \
"imconfget -fullpath /*/mta/autoReplySuppressList"

m=$(grep "$user1" expect.log  |wc -l)
if [[ "$m" -eq "2" ]]
then
	echo "key settings correctly, we can continue now"
else
	echo "key setting failed!"
	clean_accounts
	exit 2
fi

#3 get currect epoch date ,and calaute the autoreplystartdate

expect.exp $expect_timeout $MX1_HOST_IP1 $expect_user $expect_pass $expect_subuser \
"date +%s"

#cet:curent epoc time
cet=$(grep -A  1 date expect.log |grep -v "date")
cet=$(echo ${cet:0:10})
#set autoreplystartdate 5s later, and autoreplystopdate 30 minutes later.
let autoreplystartdate=cet+5
let autoreplystopdate=cet+1800
sleep 5

#4 configure user2 to proper autoreply mode
echo "########## 4 Configure user2 to vacation autoreply mode using expect tool ..."

expect.exp $expect_timeout $MX1_HOST_IP1 $expect_user $expect_pass $expect_subuser \
"echo 'internal:' >data.txt" \
"echo 'Reply,This is an autoreply message for internal senders!' >>data.txt" \
"echo 'external:' >>data.txt" \
"echo 'Reply,This is an external autoreply message for external senders!' >>data.txt" \
"autoreplyctrl ${user2}@openwave.com $autoreplymode data.txt $autoreplystartdate $autoreplystopdate"

count=$(grep  -i "AutoReply data updated Successfully"  expect.log|wc -l)
if [[ "$count" -eq "1" ]];then
	echo -e "\033[32m##########4 Congifuration successfully\033[0m"
else
	echo -e "\033[31m##########4 Configuration failed,please check maunually!Exiting now ...\033[0m"
	clean_accounts
	exit 2
fi

# 5 deliever 1 message from user1 to user2, we expect that will have a autoreplied message in inbox of user1
echo "##########5 delieber 1 message from user1 to user2 ..."

exec 3<>/dev/tcp/$MX1_HOST_IP1/$MX1_SMTP_PORT
echo -en "mail from:$user1\r\n" >&3
echo -en "rcpt to:$user2\r\n" >&3
echo -en "data\r\n" >&3
echo -en "To:$user2\r\n\r\n" >&3
echo -en "what a wonderful world i see!\r\n" >&3
echo -en ".\r\n" >&3
echo -en "quit\r\n" >&3
cat <&3 >send.log
exec 3>&-

 
count=$(grep "250 Message received" send.log|wc -l)
if [[ "$count" -eq "1" ]]
then
  echo -e "\033[32m########## 5 Message Deliver successfully, we can continue now\033[0m"
else
	echo -e "\033[31m########## 5 Message Deliver failed,please check manually,Exiting now ...\033[0m"
	cat send.log
	clean_accounts
	exit 3
fi

#6 check mta.log, make sure autoreply flag "MtaAutoReplySuppressedNotInHeader" exist:
echo "########## 6 Check mta.log using expect tool ..."
expect.exp $expect_timeout $MX1_HOST_IP1 $expect_user $expect_pass $expect_subuser \
"cat log/mta.log"

count=$(grep  -i "MtaAutoReplySuppressedSender"  expect.log|wc -l)
count1=$(grep -i "delivered" expect.log |wc -l)
if [[ "$count" -eq "1" && "$count1" -eq "1" ]];then
	echo -e "\033[32m##########6 Autoreply messaeg undelievered successfully!!\033[0m"
else
	echo -e "\033[31m##########6 Autoreply messaeg undelievered failed!Please check manually,Exiting now ...\033[0m"
	clean_accounts
	exit 4
fi 

#7 check autoreplied message in inbox of user1
echo "########## 7 check autoreplied message in inbox of user1 ..."
imapmail.pl   $MX1_HOST_IP1 $MX1_IMAP_PORT $user1 p inbox 2 >imapfetch.log
cat imapfetch.log
count=$(grep "NO FETCH failed" imapfetch.log|wc -l)
if [[ "$count" -eq	 "1" ]];then
		echo -e "\033[32m##########7 Check autoreplied messaege successfully!!\033[0m"
		log_pass "AutoReply in $autoreplymode mode with message undelievered between start/stop date for internal sender test success!"
else
		echo -e "\033[31m##########7 Check autoreplied messaege failed!Please checl manually,Exiting now ...\033[0m"
		log_fail "AutoReply in $autoreplymode mode with message undelievered between start/stop date for internal sender test failed!"
		clean_accounts
		exit 5
fi

#delete all accounts if all works fine.
clean_accounts